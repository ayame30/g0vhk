{"version":3,"sources":["../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js"],"names":["module","exports","value","this","__data__","has","array","predicate","index","length","cache","key","Symbol","__webpack_require__","Uint8Array","eq","equalArrays","mapToArray","setToArray","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","prototype","undefined","symbolValueOf","valueOf","object","other","tag","bitmask","customizer","equalFunc","stack","byteLength","byteOffset","buffer","name","message","convert","isPartial","size","stacked","get","set","result","call","map","Array","forEach","getAllKeys","hasOwnProperty","Object","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","baseGetAllKeys","getSymbols","keys","arrayPush","isArray","keysFunc","symbolsFunc","values","offset","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isArguments","isBuffer","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","push","n","iteratee","baseGetTag","isObjectLike","argsTag","isLength","typedArrayTags","func","freeGlobal","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","e","isPrototype","nativeKeys","objectProto","Ctor","overArg","transform","arg","DataView","Map","Promise","Set","WeakMap","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","configurable","enumerable","writable","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","noCustomizer","data","srcValue","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","string","charCodeAt","replace","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","clear","MapCache","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","toString","baseHasIn","hasPath","castPath","hasFunc","baseProperty","basePropertyDeep","freeSelf","self","root","Function","_objectWithoutProperties","excluded","i","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","d","__webpack_exports__","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","entry","nativeCreate","isKeyable","webpackPolyfill","deprecate","paths","children","l","baseIsEqualDeep","type","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","baseIsArguments","stubFalse","Buffer","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray","isFunction","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalByTag","equalObjects","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas"],"mappings":"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","file":"static/js/3.b7c2bf75.chunk.js","sourcesContent":["/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;"],"sourceRoot":""}