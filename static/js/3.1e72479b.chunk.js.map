{"version":3,"sources":["../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/classnames/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js"],"names":["getNative","__webpack_require__","defineProperty","func","Object","e","module","exports","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","iteratee","accumulator","array","index","length","value","baseEach","key","baseForOwn","createBaseEach","baseFor","keys","object","createBaseFor","fromRight","keysFunc","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","customizer","noCustomizer","data","objValue","srcValue","undefined","stack","result","isStrictComparable","get","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","string","charCodeAt","push","replace","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","cache","size","clear","MapCache","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","this","has","set","Cache","baseToString","Symbol","arrayMap","isSymbol","INFINITY","symbolProto","prototype","symbolToString","toString","call","Array","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arg","argType","inner","join","default","_defineProperty","obj","enumerable","configurable","writable","d","__webpack_exports__","freeGlobal","freeSelf","self","root","Function","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","_slicedToArray","arr","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","iterator","next","done","err","_iterableToArrayLimit","_nonIterableRest","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","entry","eq","nativeCreate","isKeyable","map","__data__","webpackPolyfill","deprecate","paths","children","l","baseIsEqualDeep","isObjectLike","other","bitmask","Map","type","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","slice","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","process","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","inherited","isArr","isArg","isBuff","isType","skipIndexes","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator"],"mappings":"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","file":"static/js/3.1e72479b.chunk.js","sourcesContent":["var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;"],"sourceRoot":""}