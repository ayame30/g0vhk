{"version":3,"sources":["../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js"],"names":["assocIndexOf","__webpack_require__","module","exports","key","this","__data__","value","data","index","size","push","ListCache","result","get","has","Map","MapCache","LARGE_ARRAY_SIZE","pairs","length","set","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","reIsNative","RegExp","call","replace","test","Symbol","nativeObjectToString","symToStringTag","toStringTag","undefined","isOwn","tag","unmasked","e","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","func","object","Hash","hash","map","string","hashClear","hashDelete","hashGet","hashHas","hashSet","entries","clear","entry","nativeCreate","HASH_UNDEFINED","getMapData","type","setCacheAdd","setCacheHas","SetCache","values","add","array","predicate","cache","Uint8Array","eq","equalArrays","mapToArray","setToArray","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","Array","forEach","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","baseGetAllKeys","getSymbols","arrayPush","isArray","keysFunc","symbolsFunc","offset","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isArguments","isBuffer","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","n","iteratee","baseGetTag","isObjectLike","argsTag","isLength","typedArrayTags","freeGlobal","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","arg","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","configurable","enumerable","writable","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","noCustomizer","srcValue","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","baseHasIn","hasPath","castPath","hasFunc","baseProperty","basePropertyDeep","freeSelf","self","root","baseIsNative","getValue","_objectWithoutProperties","excluded","i","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","d","__webpack_exports__","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","webpackPolyfill","deprecate","paths","children","l","baseIsEqualDeep","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","slice","pair","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","id","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","baseIsArguments","stubFalse","Buffer","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalByTag","equalObjects","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped"],"mappings":"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","file":"static/js/4.c8df3224.chunk.js","sourcesContent":["var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;"],"sourceRoot":""}