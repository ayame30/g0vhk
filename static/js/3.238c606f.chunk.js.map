{"version":3,"sources":["../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js"],"names":["Promise","__webpack_require__","getNative","module","exports","Set","WeakMap","baseAssignValue","keyBy","createAggregator","result","value","key","defineProperty","object","configurable","enumerable","writable","func","Object","e","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","iteratee","accumulator","array","index","length","baseEach","baseForOwn","createBaseEach","baseFor","keys","createBaseFor","fromRight","keysFunc","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","customizer","noCustomizer","data","objValue","srcValue","undefined","stack","isStrictComparable","get","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","string","charCodeAt","push","replace","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","cache","size","clear","MapCache","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","this","has","set","Cache","baseToString","Symbol","arrayMap","isSymbol","INFINITY","symbolProto","prototype","symbolToString","toString","call","Array","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","freeGlobal","freeSelf","self","root","Function","_objectWithoutProperties","excluded","i","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","__webpack_exports__","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","entry","eq","nativeCreate","isKeyable","map","__data__","webpackPolyfill","deprecate","paths","children","l","baseIsEqualDeep","isObjectLike","other","bitmask","Map","type","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","process","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","symbol","resIndex","baseTimes","inherited","isArr","isArg","isBuff","isType","skipIndexes","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString"],"mappings":"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","file":"static/js/3.238c606f.chunk.js","sourcesContent":["var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;"],"sourceRoot":""}