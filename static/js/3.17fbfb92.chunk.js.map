{"version":3,"sources":["../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js"],"names":["defineProperty","__webpack_require__","module","exports","object","key","value","configurable","enumerable","writable","getNative","func","Object","e","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","iteratee","accumulator","array","index","length","baseEach","baseForOwn","createBaseEach","baseFor","keys","createBaseFor","fromRight","keysFunc","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","customizer","noCustomizer","data","objValue","srcValue","undefined","stack","result","isStrictComparable","get","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","string","charCodeAt","push","replace","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","cache","size","clear","MapCache","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","this","has","set","Cache","baseToString","Symbol","arrayMap","isSymbol","INFINITY","symbolProto","prototype","symbolToString","toString","call","Array","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","freeGlobal","freeSelf","self","root","Function","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","entry","eq","nativeCreate","isKeyable","map","__data__","webpackPolyfill","deprecate","paths","children","l","i","baseIsEqualDeep","isObjectLike","other","bitmask","Map","type","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","process","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","inherited","isArr","isArg","isBuff","isType","skipIndexes","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator"],"mappings":"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","file":"static/js/3.17fbfb92.chunk.js","sourcesContent":["var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;"],"sourceRoot":""}